export const abi = [
  {
    "type": "function",
    "name": "addOwner",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "ownerKeyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "getConfig",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "threshold",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "ownerKeyHashes",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initConfig",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "threshold",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "ownerKeyHashes",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "isValidSignatureWithKeyHash",
    "inputs": [
      {
        "name": "digest",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "signature",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "magicValue",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "removeOwner",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "ownerKeyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setThreshold",
    "inputs": [
      {
        "name": "keyHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "threshold",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "error",
    "name": "ConfigAlreadySet",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidKeyHash",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidThreshold",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OwnerNotFound",
    "inputs": []
  }
] as const;

export const code = "0x6080604052348015600e575f5ffd5b50610b5d8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c806301faf36c146100645780632aca90721461008e5780632d2156b9146100a35780638afc93b4146100b6578063a4db7b4d146100e2578063aa32d86b146100f5575b5f5ffd5b6100776100723660046106e4565b610108565b604051610085929190610719565b60405180910390f35b6100a161009c366004610766565b6101a4565b005b6100a16100b1366004610766565b6102c4565b6100c96100c43660046107f2565b6102fc565b6040516001600160e01b03199091168152602001610085565b6100a16100f0366004610766565b61050b565b6100a16101033660046108a1565b61055d565b6001600160a01b0382165f90815260208181526040808320848452825280832081518083018352815481526001820180548451818702810187019095528085526060958795939493858201939092909183018282801561018557602002820191905f5260205f20905b815481526020019060010190808311610171575b5050509190925250508151602090920151919791965090945050505050565b6101ad82610600565b335f9081526020818152604080832085845290915281206001810180549192909190805b8281101561027157858482815481106101ec576101ec610946565b905f5260205f20015403610269578361020660018561096e565b8154811061021657610216610946565b905f5260205f20015484828154811061023157610231610946565b905f5260205f2001819055508380548061024d5761024d610987565b600190038181905f5260205f20015f9055905560019150610271565b6001016101d1565b50806102905760405163ae4575cd60e01b815260040160405180910390fd5b835461029d60018461096e565b10156102bc5760405163aabd5a0960e01b815260040160405180910390fd5b505050505050565b6102cd82610600565b335f90815260208181526040808320948352938152928120600190810180549182018155825292902090910155565b5f5f82806020019051810190610312919061099b565b335f90815260208181526040808320888452825280832081518083018352815481526001820180548451818702810187019095528085529697509495909491938581019392919083018282801561038657602002820191905f5260205f20905b815481526020019060010190808311610372575b50505050508152505090505f5f5b83518110156104f4575f5f336001600160a01b0316630cef73b48b8886815181106103c1576103c1610946565b60200260200101516040518363ffffffff1660e01b81526004016103e6929190610a8c565b6040805180830381865afa158015610400573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104249190610ac8565b91509150816104345750506104ec565b5f5b8560200151518110156104c457818660200151828151811061045a5761045a610946565b6020026020010151036104bc578461047181610af8565b9550505f5f1b8660200151828151811061048d5761048d610946565b6020908102919091010152855185036104b757506322bf24ed60e21b965061050495505050505050565b6104c4565b600101610436565b85602001515181036104e857506001600160e01b0319965061050495505050505050565b5050505b600101610394565b506001600160e01b031993505050505b9392505050565b61051482610600565b335f90815260208181526040808320858452909152902081158061053b5750600181015482115b156105595760405163aabd5a0960e01b815260040160405180910390fd5b5550565b815f0361057d5760405163aabd5a0960e01b815260040160405180910390fd5b335f9081526020818152604080832086845290915290208054156105b45760405163c7c5196560e01b815260040160405180910390fd5b6040805180820182528481526020808201858152335f90815280835284812089825283529390932082518155925180519293926105f79260018501920190610687565b50505050505050565b5f336001600160a01b031663be766d156040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106619190610b10565b9050818114610683576040516381255f6d60e01b815260040160405180910390fd5b5050565b828054828255905f5260205f209081019282156106c0579160200282015b828111156106c05782518255916020019190600101906106a5565b506106cc9291506106d0565b5090565b5b808211156106cc575f81556001016106d1565b5f5f604083850312156106f5575f5ffd5b82356001600160a01b038116811461070b575f5ffd5b946020939093013593505050565b5f60408201848352604060208401528084518083526060850191506020860192505f5b8181101561075a57835183526020938401939092019160010161073c565b50909695505050505050565b5f5f60408385031215610777575f5ffd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107c3576107c3610786565b604052919050565b5f67ffffffffffffffff8211156107e4576107e4610786565b50601f01601f191660200190565b5f5f5f60608486031215610804575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610828575f5ffd5b8401601f81018613610838575f5ffd5b803561084b610846826107cb565b61079a565b81815287602083850101111561085f575f5ffd5b816020840160208301375f602083830101528093505050509250925092565b5f67ffffffffffffffff82111561089757610897610786565b5060051b60200190565b5f5f5f606084860312156108b3575f5ffd5b8335925060208401359150604084013567ffffffffffffffff8111156108d7575f5ffd5b8401601f810186136108e7575f5ffd5b80356108f56108468261087e565b8082825260208201915060208360051b850101925088831115610916575f5ffd5b6020840193505b8284101561093857833582526020938401939091019061091d565b809450505050509250925092565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156109815761098161095a565b92915050565b634e487b7160e01b5f52603160045260245ffd5b5f602082840312156109ab575f5ffd5b815167ffffffffffffffff8111156109c1575f5ffd5b8201601f810184136109d1575f5ffd5b80516109df6108468261087e565b8082825260208201915060208360051b850101925086831115610a00575f5ffd5b602084015b83811015610a8157805167ffffffffffffffff811115610a23575f5ffd5b8501603f81018913610a33575f5ffd5b6020810151610a44610846826107cb565b8181526040838301018b1015610a58575f5ffd5b8160408401602083015e5f60208383010152808652505050602083019250602081019050610a05565b509695505050505050565b828152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f8301168401019150509392505050565b5f5f60408385031215610ad9575f5ffd5b82518015158114610ae8575f5ffd5b6020939093015192949293505050565b5f60018201610b0957610b0961095a565b5060010190565b5f60208284031215610b20575f5ffd5b505191905056fea26469706673582212200c162305bd62df3600b041d4760f2cbf27fdb75b3c85846a2dc1c1e52e7908af64736f6c634300081d0033" as const;

